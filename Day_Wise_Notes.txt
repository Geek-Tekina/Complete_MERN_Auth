Day 1 
-> Installed packages : cors, bcrypt, dotenv, cookie-parser, mongoose, express to get started with the setup.
-> using Twilio package to have call-authentication method using AI agent
-> using nodemailer to have email-authentication and forgot password module
-> Created basic setup and coded database connection module with Mongo Atlas

Day 2
-> Created Error middleware, in which a class is created which is extending Error Class of javascript. Used it at the last of app.js file.
-> Created User Schema.

Day 3
-> Created hashing_fnc - bcrypt using "pre" method on User schema, compare_password.
-> Imp middleware - catchAsyncErros.js middleware, used for catching erros in case of async await functions!
    ``` 
    export const catchAsyncError = (theFunction) => {
        return (req, res, next) => {
        Promise.resolve(theFunction(req, res, next)).catch(next);
        };
    };    ```
->  Created UserController. This time when regestering user, we are also checking if the user has tried more then 3 times in last 1 hour to register himself but has not verified the account. It will also use cron jon in coming code.
Function - registrationAttemptsByUser()
-> 